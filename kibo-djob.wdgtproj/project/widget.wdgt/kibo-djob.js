// This file was generated by Dashcode from Apple Inc.
// You may edit this file to customize your Dashboard widget.

var user = "";
var gname = "";
var KIBO = "https://www.beeminder.com/";
//var KIBO = "http://localhost:3000/";

function load() {
    restoregname();
	document.getElementById("graphName").value=user+"/"+gname;
	setupParts();
}

function checkNewName(event) {
   if (event.type == "mouseout" || 
       event.keyCode == 13 || event.keyCode == 9) {
       var newg = document.getElementById("graphName").value;
       if (newg != user+"/"+gname) {
         var splits = trim(newg).split("/");
         user = splits[0];
         gname = splits[1];
         show();
       }
   }
}

function savegname(store_name) {
	var preferenceKey = "graph_name";
	var preferenceValue = store_name;
	widget.setPreferenceForKey(preferenceValue, widget.identifier + "-" + preferenceKey);
}
function restoregname() {
	var preferenceForKey = "graph_name";	
    var stored_name = widget.preferenceForKey(widget.identifier + "-" + preferenceForKey);
	if ( !stored_name ) {
		gname = "blog";
        user = "meta";
	} else {
       var split = stored_name.split('/');
       user = split[0];
       gname = split[1];
    }
}

function remove() {
    // Stop any timers to prevent CPU usage
    // Remove any preferences as needed
    // widget.setPreferenceForKey(null, createInstancePreferenceKey("your-key"));
}
function hide() {
    // Stop any timers to prevent CPU usage
    savegname(user+"/"+gname);
}

function show() {
	document.getElementById("graph").src = fetchGraph();
	document.getElementById("recentData").innerText = getRecentData();
    document.getElementById("recentStats").innerHTML = getRecentStats();
    var stats = document.getElementById("recentStats");
    
}

function fetchGraph() {
	var now = new Date().getTime();
	return KIBO+user+"/goals/"+gname+"/graph.png?"+now;
}

function sync() {
    restoregname();
}

if (window.widget) {
    widget.onremove = remove;
    widget.onhide = hide;
    widget.onshow = show;
    widget.onsync = sync;
}

function getRecentData() {
  var req = makeRequest(KIBO+user+"/goals/"+gname+"/datapoints.txt?wdgt_version=1.0.2");
  if (req.status == 404){
    return "Huh, can't find "+user+"/"+gname+" -- maybe you mistyped it?";
  } else {
    var data = req.responseText;
    if (data.match(/Featured Beemindees/))
      return "Can't show secret graphs. That's secret, yo!";
    
    // otherwise: default (200)
    data = data.split("\n");
    var recent = data.pop();
    while (recent == "") {
      recent = data.pop();
    }
    return recent;
  }
}
function getRecentStats(){
  var req = makeRequest(KIBO+user+"/goals/"+gname+".json");
  if (req.status == 404){
    return "no stats";
  } else {
    var data = JSON.parse(req.responseText);
    if (data["error"]) {
      return "Uncheck 'secret' in your goal settings.";
    } else {
      var delta = data["delta"];
      var lnw = data["lnw"];
      var yaw = data["yaw"];
      
      var delts = new Array("<span class='orange'>"+ -1*(delta+lnw*yaw).toFixed(2) +"</span>", 
                            "<span class='blue'>"+ -1*delta.toFixed(2) +"</span>", 
                            "<span class='green'>"+ -1*(delta-lnw*yaw).toFixed(2) +"</span>");
      
      //return "Rate = "+data["rate"]+"/"+data["runits"]+",  Delta = "+data["delta"]; 
      return delts.join(" ");
    }
  }
}

function makeRequest(url){
  var req = new XMLHttpRequest();
  req.open("GET",url,false);
  req.send(null);
  return req;
}

function esc(s) {
   s=escape(s);
   s=s.replace(/\+/g, "%2B");
   s=s.replace(/%20/g, "+");
   s=s.replace(/\\/g, "%2F");
   return s;
}

function launchPersonal(event) {
	var websiteURL = KIBO+user+"/goals/"+gname;
	widget.openURL(websiteURL);
}
function launchKibo(event) {
	widget.openURL(KIBO);
}









function highlightMe(event) {
	var l = document.getElementById('viewtxt');
	//l.style.color = "rgb(255, 102, 102)";
	//l.style.setProperty("background-color","rgb(255, 255, 102)");
	//var pp = l.style.getPropertyValue("text-decoration");
	l.style.setProperty("text-decoration","underline");
}


function unhighlightMe(event) {
	var l = document.getElementById('viewtxt');
	//l.style.color = "";
	//l.style.setProperty("background-color","");
	l.style.setProperty("text-decoration","");
}


function showAllData(event) {
document.getElementById('dataScroll').style.display="block";
document.getElementById('recentData').style.display="none";
/*
var dat = document.getElementById('recentData').style;
dat.setProperty("background-color","rgb(255, 255, 102)");
dat.setProperty("height","200px");
dat.setProperty("color","black");
dat.setProperty("top","350px");
dat.setProperty("padding","3px");

dat.removeProperty("text-overflow");
dat.removeProperty("white-space");
dat.removeProperty("overflow");
*/
}


function hideAllData(event) {
document.getElementById('dataScroll').style.display="none";
document.getElementById('recentData').style.display="block";
/*
var dat = document.getElementById('recentData').style;
dat.removeProperty("background-color");
dat.removeProperty("padding");

dat.setProperty("top","407px");
dat.setProperty("height","15px");
dat.setProperty("color","white");
dat.setProperty("text-overflow","ellipsis");
dat.setProperty("white-space","nowrap");
dat.setProperty("overflow","hidden");
*/
}

function trim(s) {
  var l=0; var r=s.length -1;
  while(l < s.length && s[l] == ' ')
  { l++; }
  while(r > l && s[r] == ' ')
  { r-=1; }
  return s.substring(l, r+1);
}
